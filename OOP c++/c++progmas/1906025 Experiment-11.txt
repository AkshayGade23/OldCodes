// 1906025 Akshay Gade
// Experiment-11   write a program to implement (a) operator overloading   (b)type conversion

Program 11(a) :

#include <iostream>
using namespace std;

class Complex
{
    int a, b;

public:
    Complex() {}
    Complex(int x, int y)
    {
        a = x;
        b = y;
    }
    void display()
    {
        cout << "( " << a << " + " << b << " )i" << endl;
    }

    Complex operator+(Complex C)
    {
        Complex temp;
        temp.a = a + C.a;
        temp.b = b + C.b;

        return temp;
    }
};
int main()
{
    Complex C1(5, 10);
    Complex C2(15, 30);
    Complex C3;

    C1.display();
    C2.display();

    C3 = C1 + C2;

    C3.display();

    return 0;
}

OUTPUT (a):

( 5 + 10 )i
( 15 + 30 )i
( 20 + 40 )i



program (b) :



// primitive type to class type 

#include<iostream>
using namespace std;

class Complex{
    int x;
    public:
    Complex(){}
    Complex(int a){
        x=a;
    }

    void getdata(){
        cout<< "value of X= "<<x<<endl;
    }
};

int main(){
   int x=4;
   Complex C;
   C = x;
   C.getdata();
   return 0;
}

OUTPUT :
value of X= 4




// Class type to primitive type

#include <iostream>
using namespace std;

class Complex
{
    int c = 4;

public:
    void getdata()
    {
        cout << "value of c= " << c << endl;
    }
    operator int()
    {
        return c;
    }
};

int main()
{
    int x;
    Complex C;
    x = C;
    C.getdata();
    cout << "value of X= " << x << endl;
    return 0;
}

OUTPUT :
value of c= 4
value of X= 4

// Class type to class type

#include <iostream>
using namespace std;

class Product
{
    int P = 4;

public:
    int getP()
    {
        return P;
    }
    void getdata()
    {
        cout << "value of P = " << P << endl;
    }
};
class Item
{
    int I = 4;

public:
    Item() {}
    Item(Product C)
    {
        I = C.getP();
    }
    void getdata()
    {
        cout << "value of I = " << I << endl;
    }
};

int main()
{
    Item x;
    Product C;
    x = C;
    C.getdata();
    x.getdata();

    return 0;
}
OUTPUT :

value of P = 4
value of I = 4

